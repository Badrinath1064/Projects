# To Run this script: python compareall.py <year>

import networkx as nx
import matplotlib.pyplot as plt
import sys
from matplotlib.legend_handler import HandlerLine2D
from matplotlib.font_manager import FontProperties
import random
import math
from scipy.stats import ks_2samp
import numpy as np

samplepercents = [.10,.20,.30,.40,.50]
samplepercents100 = [10,20,30,40,50]
curyear = int(sys.argv[1])

'''
#Year 1975:
biases1 = [-0.01876228838155924, 0.018550753546087147, -0.004691242292440865, 0.00418682015093997, 0.0267940628647122]
biases2 = [0.12797049475699165, 0.11383191846135676, 0.09842703270668156, 0.11970536431980072, 0.08392533341998373]
biases3 = [0.08081984001635863, 0.12696555333660609, 0.10515061120799252, 0.11099723647832334, 0.09724665442606181]
biases4 = [0.024354389812042035, 0.003977712929870644, -0.0027714722103307, -0.006082162277063388, -0.007358993421122723]
avgdvalues1 = [0.80645161290322576, 0.74193548387096775, 0.72580645161290325, 0.64516129032258063, 0.64516129032258063]
avgdvalues2 = [0.77419354838709675, 0.72580645161290325, 0.64516129032258063, 0.62903225806451613, 0.61290322580645162]
avgdvalues3 = [0.77419354838709675, 0.74193548387096775, 0.64516129032258063, 0.64516129032258063, 0.61290322580645162]
avgdvalues4 = [0.77419354838709675, 0.74193548387096775, 0.64516129032258063, 0.64516129032258063, 0.61290322580645162]

#Year 1980:
biases1 = [-0.01519900568007036, -0.0021764408180224414, 0.008469349264326645, 0.013658725293826411, 0.017191477973020647]
biases2 = [0.1857307405898834, 0.14001217080372894, 0.12612192161357338, 0.12156561282233938, 0.10807407219427465]
biases3 = [0.14980974377804157, 0.13442911808982153, 0.1356054511641299, 0.11895245799022253, 0.11591838885564681]
biases4 = [0.024392603150990365, 0.003725378056646551, -0.005872242727073681, -0.0072546010667303125, -0.00941109948526458]
avgdvalues1 = [0.79032258064516125, 0.72580645161290325, 0.7338709677419355, 0.66935483870967738, 0.64516129032258063]
avgdvalues2 = [0.77419354838709675, 0.717741935483871, 0.67741935483870963, 0.64516129032258063, 0.62903225806451613]
avgdvalues3 = [0.79032258064516125, 0.72580645161290325, 0.67741935483870963, 0.64516129032258063, 0.62903225806451613]
avgdvalues4 = [0.79032258064516125, 0.72580645161290325, 0.67741935483870963, 0.64516129032258063, 0.62903225806451613]

#Year 1985:
biases1 = [-0.013794195765930661, -0.0037648467133470295, 0.009548256761937605, 0.016510962869635583, 0.027153101581861454]
biases2 = [0.19172055825839873, 0.14699711725852732, 0.1319639403431062, 0.12934430113776318, 0.11389705945294908]
biases3 = [0.148391998502082, 0.13209279499293997, 0.1349673048210154, 0.1236301301644384, 0.11395915606586406]
biases4 = [0.024578005867811788, 0.0011281193938148582, -0.005969218107369824, -0.008004449182570941, -0.009675425417615749]
avgdvalues1 = [0.76666666666666672, 0.68888888888888888, 0.66666666666666663, 0.65555555555555556, 0.62222222222222223]
avgdvalues2 = [0.76666666666666672, 0.68888888888888888, 0.65555555555555556, 0.62222222222222223, 0.59999999999999998]
avgdvalues3 = [0.76666666666666672, 0.68888888888888888, 0.65555555555555556, 0.62222222222222223, 0.59999999999999998]
avgdvalues4 = [0.76666666666666672, 0.68888888888888888, 0.65555555555555556, 0.62222222222222223, 0.59999999999999998]

#Year 1990:
biases1 = [-0.015179758213951724, 0.004264292290800296, 0.008206655105947622, 0.01759215133488643, 0.026182157583185168]
biases2 = [0.1426277772665568, 0.12870352291315335, 0.12097849537642659, 0.11939200587424495, 0.10480826903205583]
biases3 = [0.13908296438394874, 0.127513326630298, 0.12208071169803063, 0.11449942069114245, 0.10872083480580495]
biases4 = [0.032497215294748125, 0.00373303789633906, -0.005309329022012262, -0.009720160372724777, -0.009226300698599855]
avgdvalues1 = [0.734375, 0.6796875, 0.6640625, 0.6328125, 0.625]
avgdvalues2 = [0.734375, 0.6796875, 0.6484375, 0.625, 0.5703125]
avgdvalues3 = [0.734375, 0.6796875, 0.6484375, 0.625, 0.5703125]
avgdvalues4 = [0.734375, 0.6796875, 0.6484375, 0.625, 0.5703125]

#Year 1995:
biases1 = [-0.022404482821177532, -0.005290533600720543, 0.010277789826301932, 0.022163811059728103, 0.02647329857273735]
biases2 = [0.16338107613768382, 0.12324560604572385, 0.12528312011327128, 0.11862617066149717, 0.1043081176458584]
biases3 = [0.13564378696512613, 0.1284369472391435, 0.12054924438940498, 0.11422903470440784, 0.11122947707924274]
biases4 = [-0.010572426884836176, -0.0187693059911962, -0.020212210757816602, -0.01971168623666937, -0.01908115519699863]
avgdvalues1 = [0.73006134969325154, 0.68711656441717794, 0.6380368098159509, 0.6073619631901841, 0.58895705521472397]
avgdvalues2 = [0.73006134969325154, 0.66257668711656437, 0.61349693251533743, 0.58895705521472397, 0.57055214723926384]
avgdvalues3 = [0.73006134969325154, 0.66257668711656437, 0.61349693251533743, 0.58895705521472397, 0.57055214723926384]
avgdvalues4 = [0.73006134969325154, 0.66257668711656437, 0.61349693251533743, 0.58895705521472397, 0.57055214723926384]
'''
#Year 2000:
biases1 = [-0.01545957401209503, 0.00015169856444707114, 0.010190626861120981, 0.018511255658562258, 0.023923613764029843]
biases2 = [0.15502777152682673, 0.12358578488382573, 0.11919560586427484, 0.11267156499051152, 0.10647112353781805]
biases3 = [0.13014652733743626, 0.12480330392845139, 0.11437820379223153, 0.11115466282427149, 0.10571070507572237]
biases4 = [-0.007285932312328047, -0.015690808972710177, -0.018622512381909862, -0.018652657303915347, -0.01889930946633005]
avgdvalues1 = [0.72413793103448276, 0.66009852216748766, 0.61576354679802958, 0.59605911330049266, 0.5714285714285714]
avgdvalues2 = [0.71921182266009853, 0.65517241379310343, 0.60098522167487689, 0.5714285714285714, 0.53201970443349755]
avgdvalues3 = [0.72413793103448276, 0.65517241379310343, 0.60098522167487689, 0.5714285714285714, 0.53201970443349755]
avgdvalues4 = [0.72413793103448276, 0.65517241379310343, 0.60098522167487689, 0.5714285714285714, 0.53201970443349755]
'''
#Year 2005:
biases1 = [-0.018072501632576954, -0.0033229202344159867, 0.010329765220096182, 0.01644547461705531, 0.022525791690238883]
biases2 = [0.12838182777548304, 0.11875637660400729, 0.1014202360863205, 0.10829437694871302, 0.09804114598436123]
biases3 = [0.11761539483119188, 0.11360065914336581, 0.10765798472816868, 0.10219864705694898, 0.09759695268946433]
biases4 = [-0.03128086435066854, -0.029600988886350217, -0.02639067508161528, -0.02501234231317074, -0.02373984720384441]
avgdvalues1 = [0.70750988142292492, 0.65217391304347827, 0.60869565217391308, 0.56521739130434778, 0.55335968379446643]
avgdvalues2 = [0.70355731225296447, 0.62055335968379444, 0.58893280632411071, 0.54150197628458496, 0.51383399209486169]
avgdvalues3 = [0.70355731225296447, 0.62055335968379444, 0.58893280632411071, 0.54150197628458496, 0.51383399209486169]
avgdvalues4 = [0.70355731225296447, 0.62055335968379444, 0.58893280632411071, 0.54150197628458496, 0.51383399209486169]
'''

print
print 'Year',curyear,':'
print "Average Bias of sample (via random node sampling):", biases1
print "Average Bias of sample (via modified random node sampling):", biases2
print "Average Bias of sample (via random walk):", biases3
print "Average D value of sample (via random node sampling):", avgdvalues1
print "Average D value of sample (via modified random node sampling):", avgdvalues2
print "Average D value of sample (via random walk):", avgdvalues3
	
plt.figure()
ax = plt.subplot(111)
box = ax.get_position()
ax.set_position([box.x0, box.y0 + box.height * 0.10, box.width, box.height * .90])
fontP = FontProperties()
fontP.set_size('small')
plt.xlim(0,60)
line1, = plt.plot(samplepercents100,biases1,'bo-', label='Random node sampling')
line2, = plt.plot(samplepercents100,biases2,'rs-', label='Modified random node sampling')
line3, = plt.plot(samplepercents100,biases3,'c^-', label='Node sampling via random walk')
line4, = plt.plot(samplepercents100,biases4,'gp-', label='Node sampling (main core and random periphery nodes)')
plt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.12), fancybox=True, shadow=True, ncol=2, handler_map={line1: HandlerLine2D(numpoints=2)}, prop = fontP)
plt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.12), fancybox=True, shadow=True, ncol=2, handler_map={line2: HandlerLine2D(numpoints=2)}, prop = fontP)
plt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.12), fancybox=True, shadow=True, ncol=2, handler_map={line3: HandlerLine2D(numpoints=2)}, prop = fontP)
plt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.12), fancybox=True, shadow=True, ncol=2, handler_map={line4: HandlerLine2D(numpoints=2)}, prop = fontP)
plt.suptitle('Comparison of Average Clustering Coefficient Bias vs Random node sample % plot till year '+str(curyear), fontsize=12)
plt.xlabel('Random node sample %')
plt.ylabel('Average Clustering Coefficient Bias')
plt.savefig('Comparison of Average Clustering Coefficient Bias vs Random node sample % plot till year '+str(curyear)+'.png')
plt.close()

plt.figure()
plt.xlim(0,60)
ax = plt.subplot(111)
box = ax.get_position()
ax.set_position([box.x0, box.y0 + box.height * 0.10, box.width, box.height * .90])
fontP = FontProperties()
fontP.set_size('small')
line1, = plt.plot(samplepercents100,avgdvalues1,'bo-', label='Random node sampling')
line2, = plt.plot(samplepercents100,avgdvalues2,'rs-', label='Modified random node sampling')
line3, = plt.plot(samplepercents100,avgdvalues3,'c^-', label='Node sampling via random walk')
line4, = plt.plot(samplepercents100,avgdvalues4,'gp-', label='Node sampling (main core and random periphery nodes)')
plt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.12), fancybox=True, shadow=True, ncol=2, handler_map={line1: HandlerLine2D(numpoints=2)}, prop = fontP)
plt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.12), fancybox=True, shadow=True, ncol=2, handler_map={line2: HandlerLine2D(numpoints=2)}, prop = fontP)
plt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.12), fancybox=True, shadow=True, ncol=2, handler_map={line3: HandlerLine2D(numpoints=2)}, prop = fontP)
plt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.12), fancybox=True, shadow=True, ncol=2, handler_map={line4: HandlerLine2D(numpoints=2)}, prop = fontP)
plt.suptitle('Comparison of K-S statistic value for degree distribution vs Random node sample % plot till year '+str(curyear), fontsize=12)
plt.xlabel('Random node sample %')
plt.ylabel('K-S statistic value for degree distribution')
plt.savefig('Comparison of K-S statistic value for degree distribution vs Random node sample % plot till year '+str(curyear)+'.png')
plt.close()
